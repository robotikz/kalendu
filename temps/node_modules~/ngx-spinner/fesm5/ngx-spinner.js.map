{"version":3,"file":"ngx-spinner.js.map","sources":["ng://ngx-spinner/lib/ngx-spinner.enum.ts","ng://ngx-spinner/lib/ngx-spinner.service.ts","ng://ngx-spinner/lib/ngx-spinner.component.ts","ng://ngx-spinner/lib/ngx-spinner.module.ts"],"sourcesContent":["export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n\nexport const DEFAULTS = {\n  BD_COLOR: 'rgba(51,51,51,0.8)',\n  SPINNER_COLOR: '#fff',\n  SPINNER_TYPE: 'ball-scale-multiple',\n};\n\nexport const PRIMARY_SPINNER = 'primary';\n\nexport type Size = 'default' | 'small' | 'medium' | 'large';\n\nexport interface Spinner {\n  bdColor?: string;\n  size?: Size;\n  color?: string;\n  type?: string;\n  fullScreen?: boolean;\n}\n\nexport class NgxSpinner {\n  name: string;\n  bdColor: string;\n  size: Size;\n  color: string;\n  type: string;\n  class: string;\n  divCount: number;\n  divArray: Array<number>;\n  fullScreen: boolean;\n  show: boolean;\n\n  constructor(init?: Partial<NgxSpinner>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  private spinnerObservable = new Subject<NgxSpinner>();\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n  * Get subscription of desired spinner\n  * @memberof NgxSpinnerService\n  **/\n  getSpinner(name: string): Observable<NgxSpinner> {\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner) {\n    const showPromise = new Promise((resolve, reject) => {\n      if (spinner && Object.keys(spinner).length) {\n        spinner['name'] = name;\n        this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\n        resolve(true);\n      } else {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n        resolve(true);\n      }\n    });\n    return showPromise;\n  }\n  /**\n  * To hide spinner\n  *\n  * @memberof NgxSpinnerService\n  */\n  hide(name: string = PRIMARY_SPINNER) {\n    const hidePromise = new Promise((resolve, reject) => {\n      this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n      resolve(true);\n    });\n    return hidePromise;\n  }\n}\n","import { Component, OnDestroy, Input, OnInit, OnChanges, SimpleChanges, SimpleChange, Attribute } from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css']\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n\n  /**\n   * Spinner name\n   * @memberof NgxSpinnerComponent\n   */\n  private name: string;\n  /**\n   * To set backdrop color(DEFAULTS.BD_COLOR)\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor = DEFAULTS.BD_COLOR;\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size: Size = 'large';\n  /**\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color = DEFAULTS.SPINNER_COLOR;\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type = DEFAULTS.SPINNER_TYPE;\n  /**\n   * To toggle fullscreen mode\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen = true;\n  /**\n   * Spinner Object\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinner: NgxSpinner = new NgxSpinner();\n  /**\n   * Array for spinner's divs\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number> = [];\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   *\n   */\n  divCount = 0;\n  /**\n   * Show spinner\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  show = false;\n  /**\n   * Unsubscribe from spinner's observable\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  ngUnsubscribe: Subject<void> = new Subject();\n\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(\n    private spinnerService: NgxSpinnerService,\n    @Attribute('name') name: string) {\n    this.name = name || PRIMARY_SPINNER;\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.spinnerService.getSpinner(this.name)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((spinner: NgxSpinner) => {\n        this.setDefaultOptions();\n        Object.assign(this.spinner, spinner);\n        this.show = spinner.show;\n        if (this.show) {\n          this.fullScreen = spinner.fullScreen;\n          this.onInputChange();\n        }\n      });\n  }\n  /**\n   * To set default ngx-spinner options\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  setDefaultOptions = () => {\n    this.spinner = new NgxSpinner({\n      name: this.name,\n      bdColor: this.bdColor,\n      size: this.size,\n      color: this.color,\n      type: this.type,\n      fullScreen: this.fullScreen\n    });\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange: SimpleChange = changes.type;\n    const sizeChange: SimpleChange = changes.size;\n\n    if (typeChange) {\n      if (typeof typeChange.currentValue !== 'undefined' && typeChange.currentValue !== typeChange.previousValue) {\n        if (typeChange.currentValue !== '') {\n          this.spinner.type = typeChange.currentValue;\n        }\n      }\n    }\n\n    if (sizeChange) {\n      if (typeof sizeChange.currentValue !== 'undefined' && sizeChange.currentValue !== sizeChange.previousValue) {\n        if (sizeChange.currentValue !== '') {\n          this.spinner.size = sizeChange.currentValue;\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type: string, size: Size): string {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n"],"names":[],"mappings":"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"}
