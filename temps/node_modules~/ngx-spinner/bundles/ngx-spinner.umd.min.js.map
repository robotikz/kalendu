{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-spinner/lib/ngx-spinner.enum.ts","ng://ngx-spinner/lib/ngx-spinner.service.ts","ng://ngx-spinner/lib/ngx-spinner.component.ts","ng://ngx-spinner/lib/ngx-spinner.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","LOADERS","ball-8bits","ball-atom","ball-beat","ball-circus","ball-climbing-dot","ball-clip-rotate","ball-clip-rotate-multiple","ball-clip-rotate-pulse","ball-elastic-dots","ball-fall","ball-fussion","ball-grid-beat","ball-grid-pulse","ball-newton-cradle","ball-pulse","ball-pulse-rise","ball-pulse-sync","ball-rotate","ball-running-dots","ball-scale","ball-scale-multiple","ball-scale-pulse","ball-scale-ripple","ball-scale-ripple-multiple","ball-spin","ball-spin-clockwise","ball-spin-clockwise-fade","ball-spin-clockwise-fade-rotating","ball-spin-fade","ball-spin-fade-rotating","ball-spin-rotate","ball-square-clockwise-spin","ball-square-spin","ball-triangle-path","ball-zig-zag","ball-zig-zag-deflect","cog","cube-transition","fire","line-scale","line-scale-party","line-scale-pulse-out","line-scale-pulse-out-rapid","line-spin-clockwise-fade","line-spin-clockwise-fade-rotating","line-spin-fade","line-spin-fade-rotating","pacman","square-jelly-box","square-loader","square-spin","timer","triangle-skew-spin","DEFAULTS","PRIMARY_SPINNER","NgxSpinner","init","NgxSpinnerService","spinnerObservable","Subject","getSpinner","name","asObservable","pipe","filter","x","show","spinner","_this","Promise","resolve","reject","keys","next","hide","Injectable","args","providedIn","NgxSpinnerComponent","spinnerService","bdColor","size","color","type","fullScreen","divArray","divCount","ngUnsubscribe","setDefaultOptions","ngOnInit","takeUntil","subscribe","onInputChange","ngOnChanges","changes","typeChange","sizeChange","currentValue","previousValue","getClass","Array","fill","map","sizeClass","toLowerCase","class","ngOnDestroy","complete","Component","selector","template","Attribute","Input","NgxSpinnerModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n\nexport const DEFAULTS = {\n  BD_COLOR: 'rgba(51,51,51,0.8)',\n  SPINNER_COLOR: '#fff',\n  SPINNER_TYPE: 'ball-scale-multiple',\n};\n\nexport const PRIMARY_SPINNER = 'primary';\n\nexport type Size = 'default' | 'small' | 'medium' | 'large';\n\nexport interface Spinner {\n  bdColor?: string;\n  size?: Size;\n  color?: string;\n  type?: string;\n  fullScreen?: boolean;\n}\n\nexport class NgxSpinner {\n  name: string;\n  bdColor: string;\n  size: Size;\n  color: string;\n  type: string;\n  class: string;\n  divCount: number;\n  divArray: Array<number>;\n  fullScreen: boolean;\n  show: boolean;\n\n  constructor(init?: Partial<NgxSpinner>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  private spinnerObservable = new Subject<NgxSpinner>();\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n  * Get subscription of desired spinner\n  * @memberof NgxSpinnerService\n  **/\n  getSpinner(name: string): Observable<NgxSpinner> {\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner) {\n    const showPromise = new Promise((resolve, reject) => {\n      if (spinner && Object.keys(spinner).length) {\n        spinner['name'] = name;\n        this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\n        resolve(true);\n      } else {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n        resolve(true);\n      }\n    });\n    return showPromise;\n  }\n  /**\n  * To hide spinner\n  *\n  * @memberof NgxSpinnerService\n  */\n  hide(name: string = PRIMARY_SPINNER) {\n    const hidePromise = new Promise((resolve, reject) => {\n      this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n      resolve(true);\n    });\n    return hidePromise;\n  }\n}\n","import { Component, OnDestroy, Input, OnInit, OnChanges, SimpleChanges, SimpleChange, Attribute } from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css']\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n\n  /**\n   * Spinner name\n   * @memberof NgxSpinnerComponent\n   */\n  private name: string;\n  /**\n   * To set backdrop color(DEFAULTS.BD_COLOR)\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor = DEFAULTS.BD_COLOR;\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size: Size = 'large';\n  /**\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color = DEFAULTS.SPINNER_COLOR;\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type = DEFAULTS.SPINNER_TYPE;\n  /**\n   * To toggle fullscreen mode\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen = true;\n  /**\n   * Spinner Object\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinner: NgxSpinner = new NgxSpinner();\n  /**\n   * Array for spinner's divs\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number> = [];\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   *\n   */\n  divCount = 0;\n  /**\n   * Show spinner\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  show = false;\n  /**\n   * Unsubscribe from spinner's observable\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  ngUnsubscribe: Subject<void> = new Subject();\n\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(\n    private spinnerService: NgxSpinnerService,\n    @Attribute('name') name: string) {\n    this.name = name || PRIMARY_SPINNER;\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.spinnerService.getSpinner(this.name)\n      .pipe(takeUntil(this.ngUnsubscribe))\n      .subscribe((spinner: NgxSpinner) => {\n        this.setDefaultOptions();\n        Object.assign(this.spinner, spinner);\n        this.show = spinner.show;\n        if (this.show) {\n          this.fullScreen = spinner.fullScreen;\n          this.onInputChange();\n        }\n      });\n  }\n  /**\n   * To set default ngx-spinner options\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  setDefaultOptions = () => {\n    this.spinner = new NgxSpinner({\n      name: this.name,\n      bdColor: this.bdColor,\n      size: this.size,\n      color: this.color,\n      type: this.type,\n      fullScreen: this.fullScreen\n    });\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange: SimpleChange = changes.type;\n    const sizeChange: SimpleChange = changes.size;\n\n    if (typeChange) {\n      if (typeof typeChange.currentValue !== 'undefined' && typeChange.currentValue !== typeChange.previousValue) {\n        if (typeChange.currentValue !== '') {\n          this.spinner.type = typeChange.currentValue;\n        }\n      }\n    }\n\n    if (sizeChange) {\n      if (typeof sizeChange.currentValue !== 'undefined' && sizeChange.currentValue !== sizeChange.previousValue) {\n        if (sizeChange.currentValue !== '') {\n          this.spinner.size = sizeChange.currentValue;\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type: string, size: Size): string {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n"]}